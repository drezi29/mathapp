# Generated by Django 4.2.1 on 2023-07-02 19:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chapters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.ForeignKey(help_text='The topic to which the note is linked', on_delete=django.db.models.deletion.CASCADE, to='chapters.topic', verbose_name='topic')),
            ],
            options={
                'verbose_name': 'note',
                'verbose_name_plural': 'notes',
            },
        ),
        migrations.CreateModel(
            name='NoteElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Resource title for the administrator purpose of management', max_length=128, verbose_name='name')),
                ('description', models.CharField(help_text='Title that can be placed below content on the template to describe content', max_length=255, verbose_name='description')),
                ('text', models.TextField(blank=True, help_text='Fill in the field if the note is textual', null=True, verbose_name='text')),
                ('file', models.FileField(blank=True, help_text='Fill in the field if the note is a video', null=True, upload_to='uploads/', verbose_name='file')),
                ('image', models.ImageField(blank=True, help_text='Fill in the field if the note is an image', null=True, upload_to='uploads/', verbose_name='image')),
                ('order', models.IntegerField(help_text='Order of elements in the note view', verbose_name='order')),
                ('note', models.ForeignKey(help_text='The note to which the note element is linked', on_delete=django.db.models.deletion.CASCADE, to='notes.note', verbose_name='note')),
            ],
            options={
                'verbose_name': 'note element',
                'verbose_name_plural': 'note elements',
            },
        ),
        migrations.AddConstraint(
            model_name='noteelement',
            constraint=models.UniqueConstraint(fields=('note', 'order'), name='unique_order_for_element_in_note'),
        ),
    ]
